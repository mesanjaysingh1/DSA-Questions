Given a string s, find the length of the longest substring without repeating characters.
Example 1:

Input: s = "abcabcbb"
Output: 3
Explanation: The answer is "abc", with the length of 3.

Idea: Use 2 pointers// Slide window and whenever a char comes which is already scanned in HS remove char(left) & inc left else add right char and right++.

class Solution {
    public int lengthOfLongestSubstring(String s) {
        HashSet<Character> hs = new HashSet<>();
        int left=0,res=0,right=0,n=s.length();
        while(right<n){
            if(!hs.contains(s.charAt(right))){
                hs.add(s.charAt(right));
                res=Math.max(res,right-left+1);right++;
            }
            else{
                hs.remove(s.charAt(left));left++;
            }
             
        }
        return res;
    }
}
