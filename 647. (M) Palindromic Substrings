Given a string s, return the number of palindromic substrings in it.

A string is a palindrome when it reads the same backward as forward.

A substring is a contiguous sequence of characters within the string. 

Example 1:

Input: s = "abc"
Output: 3
Explanation: Three palindromic strings: "a", "b", "c".

Idea: Same as Longest Palindromic Substring problem. strech towards left, right & if same inc count++. 
class Solution {
    public int countSubstrings(String s) {
        int count=0;
      for(int i=0;i<s.length();i++){
      count+= getPalindString(s,i,i,0); 
      count+= getPalindString(s,i,i+1,0);  
      }
      return count;  
    }
    public int getPalindString(String s,int left,int right,int count){
        while(left>=0 && right<s.length() && s.charAt(left)==s.charAt(right)){
            count++;left--;right++;
        }
        return count;
    }
}
