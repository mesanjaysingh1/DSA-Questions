Given the root of a binary tree, return the leftmost value in the last row of the tree.

Example 1:


Input: root = [2,1,3]
Output: 1

Idea: Do bfs/ level order traversal of tree add from right -> left to queue.

TC: O(n) SC:O(1)

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int findBottomLeftValue(TreeNode root) {
        ArrayDeque<TreeNode> q = new ArrayDeque<>();
        q.add(root);
        TreeNode curr =null;
        while(!q.isEmpty()){
            int len = q.size();
            while(len>0){
                curr = q.remove();
                if(curr.right!=null){q.add(curr.right);}
                if(curr.left!=null){q.add(curr.left);}
                len--;
            }
        }
        return curr.val;
    }
    
}
