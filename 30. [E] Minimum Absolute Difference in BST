Given the root of a Binary Search Tree (BST), return the minimum absolute difference between the values of any two different nodes in the tree. 

Example 1:

Input: root = [4,2,6,1,3]
Output: 1

Idea: Do inorder of bst which is sorted then keep calculating diff between prev and curr.

TC:O(n) SC:O(n)

class Solution {
    int res=Integer.MAX_VALUE; TreeNode prev=null;
    public int getMinimumDifference(TreeNode root) {
       inorder(root);
       return res;
    }
    public void inorder(TreeNode root){
        if(root==null) return ;
        inorder(root.left);
        if(prev!=null){
            res = Math.min(res,Math.abs(prev.val-root.val));
        }
        prev = root;
        inorder(root.right);

    }
}

