Write an efficient algorithm that searches for a value target in an m x n integer matrix matrix. This matrix has the following properties:

Integers in each row are sorted from left to right.
The first integer of each row is greater than the last integer of the previous row.

Input: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3
Output: true

Idea: AS rows ar asc order, check with last element of each row. if <target row++ else col--;

class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
     int m=matrix.length,n=matrix[0].length;  
     int left=0,right=n-1;  
     while(left<m && right>=0){
         if(matrix[left][right]==target){return true;}
         else if(matrix[left][right]<target){left++;}
         else{right--;}
     }   
        return false;
    }
}
