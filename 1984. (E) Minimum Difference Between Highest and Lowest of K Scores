You are given a 0-indexed integer array nums, where nums[i] represents the score of the ith student. You are also given an integer k.

Pick the scores of any k students from the array so that the difference between the highest and the lowest of the k scores is minimized.

Return the minimum possible difference.

 

Example 1:

Input: nums = [90], k = 1
Output: 0
Explanation: There is one way to pick score(s) of one student:
- [90]. The difference between the highest and lowest score is 90 - 90 = 0.
The minimum possible difference is 0.

Idea: Sort input then find min diff in sindow size left to right. here right = left+k-1;

TC : O(nlogn)
class Solution {
    public int minimumDifference(int[] nums, int k) {
        int res=Integer.MAX_VALUE;Arrays.sort(nums);
        for(int left=0;left<=nums.length-k;left++){
            int right = left+k-1;
            res=Math.min(res,nums[right]-nums[left]);
        }
         return res;
    }
}
