Given an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive.

There is only one repeated number in nums, return this repeated number.

You must solve the problem without modifying the array nums and uses only constant extra space.
Example 1:

Input: nums = [1,3,4,2,2]
Output: 2
Example 2:

Input: nums = [3,1,3,4,2]
Output: 3

Idea: Use Floyds cycle detection algo. 
Use value as index eg 0-> 3. Detect cycle then move fast pointer at start and move both ptr 1 step till they meet. at meet is repeated num

class Solution {
    public int findDuplicate(int[] nums) {
        int slow=0,fast=0;
        do{
            slow=nums[slow];fast=nums[nums[fast]];
        }while(slow!=fast);
        fast=0;
        while(fast!=slow){
            slow=nums[slow];fast=nums[fast];
            if(fast==slow)return slow;
        }
        return 0;
    }
}
