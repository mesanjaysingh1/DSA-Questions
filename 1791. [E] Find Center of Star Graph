There is an undirected star graph consisting of n nodes labeled from 1 to n. A star graph is a graph where there is one center node and exactly 
n - 1 edges that connect the center node with every other node.

You are given a 2D integer array edges where each edges[i] = [ui, vi] indicates that there is an edge between the nodes ui and vi. 
Return the center of the given star graph. 

Example 1:

Input: edges = [[1,2],[2,3],[4,2]]
Output: 2
Explanation: As shown in the figure above, node 2 is connected to every other node, so 2 is the center.

Idea: Inc freq of each node for edges and only center edge at last will have n[edge length] freq as it is connected to every node.

TC:O(n) SC:O(n)

class Solution {
    public int findCenter(int[][] edges) {
        int n= edges.length;
        int freq [] = new int[n+2];
        for(int i=0;i<n;i++){
            int a= edges[i][0], b=edges[i][1];
            freq[a]++;freq[b]++;
            if(freq[a]==n){return a;}
            else if(freq[b]==n){return b;}
        }
        return -1;
    }
}
