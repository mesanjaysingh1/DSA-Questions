Given a string s consisting only of characters a, b and c.

Return the number of substrings containing at least one occurrence of all these characters a, b and c. 

Example 1:

Input: s = "abcabc"
Output: 10
Explanation: The substrings containing at least one occurrence of the characters a, b and c are "abc", "abca", "abcab", "abcabc", "bca", "bcab", "bcabc",
"cab", "cabc" and "abc" (again). 

Idea: Do sliding window and whenever all 3 have >0 frequency repetedly inc res by size on right char of r var till all char >0 frqn.

TC:O(n) SC:O(3)

class Solution {
    public int numberOfSubstrings(String s) {
        int count [] = new int[3];
        int l=0,  res=0;
        for(int r=0;r<s.length();r++){
            count[s.charAt(r)-'a']++;
            while(count[0]>0 && count[1]>0 && count[2]>0){
                res+= (s.length()-r);
                count[s.charAt(l)-'a']--; l++;
            }
        }
        return res;
    }
}

