Given an array nums of distinct integers, return all the possible permutations. You can return the answer in any order.
Example 1:

Input: nums = [1,2,3]
Output: [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]

Idea: Include element 1,2,3 then remove 3->2 add 3 then 2 repeat.

class Solution {
    public List<List<Integer>> permute(int[] nums) {
      List<List<Integer>> res = new ArrayList<>();
      List<Integer> list = new ArrayList<>();  
      backtrack(res,list,nums);
        return res;
    }
    public void backtrack(List<List<Integer>> res,List<Integer> list,int nums[]){
        if(list.size()==nums.length) res.add(new ArrayList(list));
        for(int i=0;i<nums.length;i++){
            if(list.contains(nums[i]))continue;
            list.add(nums[i]);
            backtrack(res,list,nums);
            list.remove(list.size()-1);
        }
    }
}
