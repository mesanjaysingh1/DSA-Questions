Given an array nums containing n distinct numbers in the range [0, n], return the only number in the range that is missing from the array. 

Example 1:

Input: nums = [3,0,1]
Output: 2
Explanation: n = 3 since there are 3 numbers, so all numbers are in the range [0,3]. 2 is the missing number in the range since it does not appear in nums.

Brute: Check each val after sorting. TC:O(nlogn)

class Solution {
    public int missingNumber(int[] nums) {
        Arrays.sort(nums);int i=0;
        for(i=0;i<nums.length;i++){
            if(nums[i]!=i) return i;
        }
        return i;
    }
}

Optimal: Find series sum and sum of array. Diff is our ans.

TC:O(n) SC:O(1)

class Solution {
    public int missingNumber(int[] nums) {
        int sum=0,n=nums.length,series_sum=(n*(n+1)/2);
        for(int i=0;i<n;i++){
            sum+=nums[i];
        }
        return series_sum-sum;
    }
}
