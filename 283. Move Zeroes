Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Note that you must do this in-place without making a copy of the array.

Example 1:

Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]

Idea: Think of 0's as snowball inc its size when 0 is found. If non zero & snowball size>0 then swap non zero element with snowball size 
back place & make non zero element 0.

TC:O(n) 
class Solution {
    public void moveZeroes(int[] nums) {
        int snowballsize=0;
        for(int i=0;i<nums.length;i++){
            if(nums[i]==0){snowballsize++;}
            else if(snowballsize>0){
                nums[i-snowballsize]=nums[i];nums[i]=0;
            }
        }
    }
}

